#!/usr/bin/lua

local json = require 'jsonc'
local uci = require('simple-uci').cursor()
local ddutil = require 'tecff-domain-director'


-- Saves target domain in UCI
function save_target_domain(domain_name)
  uci:set("tecff", "director", "target", domain_name)
  uci:commit("tecff")
end

-- Saves switch-after time (as UNIX epoch) in UCI
function save_switch_time(switch_time)
  uci:set("tecff", "director", "switch_after", switch_time)
  uci:commit("tecff")
end

-- sends queries remote
-- Returns response as string.
function query_remote(remote)
	local handle = io.popen("wget -T 30 -qO - "..remote)
	local return_str =  handle:read("*a")
	handle:close()
	return return_str
end

-- Updates target domain by querying a remote director
function update_domain()
  local response = json.parse(query_remote(ddutil.get_director_url()))
  if response == nil then
    print("Received invalid response. Exiting.")
    return
  end
  local domain = response.node_information.domain.name
  local switch_time = response.node_information.domain.switch_time

  if ddutil.firmware_is_multidomain() then
    if ddutil.check_domain_exists(domain) then
      print("Domain "..domain.." is valid, setting as proposed domain")
    else
      print("Domain "..domain.." is invalid, aborting")
      return
    end
  else
    print("Firmware has no multidomain support. Skipping domain validation.")
  end

  save_target_domain(domain)
  save_switch_time(switch_time)
end

if not ddutil.is_enabled() then
  print("Domain director is disabled.")
  return
end

update_domain()
