#!/usr/bin/lua

local site = require 'gluon.site'
local uci = require('simple-uci').cursor()

local ddutil = require 'tecff-domain-director'

-- Create UCI configuration file if not present
os.execute("touch /etc/config/tecff")

-- Create UCI section
local director_enabled = true
if uci:get("tecff", "director", "enabled") ~= nil then
	director_enabled = uci:get("tecff", "director", "enabled")
end
uci:section('tecff', 'director', 'director', {
	enabled = director_enabled,
})

if site.domain_director.url(nil) ~= nil then
	uci:set("tecff", "director", "url", site.domain_director.url())
end

if site.domain_director.switch_after_offline(nil) ~= nil then
	uci:set("tecff", "director", "switch_after_offline", site.domain_director.switch_after_offline())
end

uci:commit("tecff")

local cronfile = "/usr/lib/micron.d/tecff-domain-director"

-- Check if director is enabled for the current domain
if not ddutil.is_enabled_site() then
  -- In case it is disabled, delete cronfile
  os.remove(cronfile)
  return
end

local urandom = io.open('/dev/urandom', 'r')
local seed1, seed2 = urandom:read(2):byte(1, 2)
math.randomseed(seed1*0x100 + seed2)
urandom:close()

-- Perform domain acquisition at random minute every 3 hours
local minute = math.random(0, 59)

local f = io.open(cronfile, 'w')
f:write("*/1 * * * *  /usr/bin/tecff-check-gw-reachability\n")
f:write("*/5 * * * *  /usr/bin/tecff-switch-domain\n")
f:write(string.format('%i */3 * * *  /usr/bin/tecff-get-domain\n', minute))
f:close()
